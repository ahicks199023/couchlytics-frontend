rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow initial setup - create league and global chat documents
    match /leagues/{leagueId} {
      allow read, write: if request.auth != null;
      
      match /members/{userId} {
        allow read, write: if request.auth != null;
      }
      
      match /commissioners/{userId} {
        allow read, write: if request.auth != null;
      }
    }
    
    // Allow access to league chat messages
    match /leagueChats/{leagueId} {
      allow read, write: if request.auth != null;
      
      match /messages/{messageId} {
        allow read, write: if request.auth != null;
        allow update, delete: if request.auth != null && (
          resource.data.senderEmail == request.auth.token.email ||
          exists(/databases/$(database)/documents/leagues/$(leagueId)/commissioners/$(request.auth.uid))
        );
      }
    }
    
    match /globalChat/{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Global chat messages
    match /globalChatMessages/{messageId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
      allow update, delete: if request.auth != null && (
        resource.data.senderEmail == request.auth.token.email ||
        request.auth.token.isAdmin == true
      );
    }
    
    // League chat messages (legacy rule - keeping for compatibility)
    match /leagueChats/{leagueId}/messages/{messageId} {
      allow read: if request.auth != null && (
        exists(/databases/$(database)/documents/leagues/$(leagueId)/members/$(request.auth.uid))
      );
      allow write: if request.auth != null && (
        exists(/databases/$(database)/documents/leagues/$(leagueId)/members/$(request.auth.uid))
      );
      allow update, delete: if request.auth != null && (
        resource.data.senderEmail == request.auth.token.email ||
        exists(/databases/$(database)/documents/leagues/$(leagueId)/commissioners/$(request.auth.uid))
      );
    }
    
    // Private messages
    match /privateMessages/{conversationId} {
      allow read, write: if request.auth != null;
      
      match /messages/{messageId} {
        allow read, write: if request.auth != null;
        allow update, delete: if request.auth != null && (
          resource.data.senderEmail == request.auth.token.email
        );
      }
    }
  }
}